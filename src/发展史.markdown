# 小程序简介

## 小程序雏形

一开始微信为内部人员提供一系列的原生 JS API,以实现一系列功能的目的.一开始只是内部使用,后来很多外部开发者也陆续使用,逐渐成为微信中网页的事实标准。

微信内嵌浏览器定义了一个私有 JavaScript 对象：WeixinJSBridge，通过操作这个对象的相关方法可以实现分享到微信朋友圈，和判断一个微信号的关注状态以及实现关注指定微信号等功能。

2015 年微信开始提供一整套网页开发工具包(JS-SDK),包括拍摄、录音、语音识别、二维码、地图、支付、分享、卡券等几十个 API,让所有开发者都可以使用微信的原生方法

然而如果页面加载了大量的 css 或者 js 文件,用户在访问网页时存在一个白屏的过程,非常影响体验

因此需要设计一个提升用户和开发者体验的系统,
这个系统需要:

- 快速的加载

- 更强大的能力

- 原生的体验

- 易用且安全的微信数据开放

- 高效和简单的开发
  这就是小程序的由来.

## 小程序与普通网页开发的区别

### 运行环境

在浏览器中开发网页时,在 Javascript 引擎运行脚本期间,GUI 渲染线程都是处于挂起状态的.渲染线程和 js 脚本线程是互斥的.开发者可以通过 DOM API 操控 DOM 元素

在小程序中,逻辑层和渲染层是分开的,逻辑层运行在 JSCore 中,并没有一个完整的浏览器对象,缺少相关的 DOM API,因此像 jQuery/Zepto 等是在小程序中无法运行的

网页开发者需要面对各种各样的浏览器来调试兼容性,小程序开发需要面对两大操作系统 IOS 和 Android 的微信客户端,以及小程序开发者工具.
| 运行环境 | 逻辑层 | 渲染层 |
|---|---|---|
|iOS | JavaScriptCore | WKWebView
|安卓 |V8 |chromium 定制内核
|小程序开发者工具| NWJS| Chrome WebView

### 开发成本

小程序的开发成本比以往的 HTML5 开发的 web 成本低很多

- H5 页面：开发一个 H5，需要从开发工具、前端框架、模块管理工具、任务管理工具，还有 UI 库选择、接口调用工具、浏览器兼容性等等都要考虑
- 小程序：微信提供了统一的开发工具，并且规范了开发标准,可以随意调用微信开发里的 API，不用担心浏览器的兼容性

### 系统权限

- 小程序：微信作为原生 app 能获取到更多的系统权限，如网络通信状态、数据缓存能力等,因此小程序也能因此获取到系统级权限
- H5：H5 应用则相对少了很多

### 用户体验

- H5 页面：我们在打开一个 HTML5 页面的时候，实际上就是打开一个 web 网页，而网页在浏览的时候，需要在浏览器中进行渲染，这个过程叫做加载，无论加载的时间的长短，都会给用户一种「卡」或者「不灵敏」的感觉。
- 小程序：小程序是微信内的云端应用，通过 WebSocket 双向通信（保证无需刷新即时通信）、本地缓存（图片与 UI 本地缓存降低与服务器交互延时）以及微信底层技术优化实现了小程序接近原生 APP 的体验。所以在使用小程序的时候，同等网络条件下几乎不用等待，可以像操作普通 app 一样流畅。

## 小程序原理

- 渲染层和逻辑层
  小程序的运行环境分成渲染层和逻辑层,其中 WXML 模板和 WXSS 样式工作在渲染层，JS 脚本工作在逻辑层。
  渲染层界面使用了 WebView 进行渲染,逻辑层采用了 JsCore 线程运行 Js 脚本,这两个线程经由微信客户端(Native)进行通信中转,逻辑层发送请求也经由 Native 转发
